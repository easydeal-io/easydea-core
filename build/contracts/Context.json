{
  "contractName": "Context",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contextAddress",
          "type": "address"
        }
      ],
      "name": "updateContext",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContextAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getContextAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contextAddress\",\"type\":\"address\"}],\"name\":\"updateContext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IESDContext.sol\":{\"keccak256\":\"0xd8efdae328e62f8102fbc1e2f17abace8246a04b763ef0270db9a60c40b0bdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4668bb3a68f5c99a82f5e4234294beca94f0a27bfc4e50351b55d242de84a4c7\",\"dweb:/ipfs/QmfLtFYs2wjKbhzbPsgbEg8FBnrxvmzbu6KJatHLboFgZq\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol\":{\"keccak256\":\"0xdd306bf6a1a37b60ac621ca0966c65e3ffba25f09a7c453ba6b0134b89e176f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8d22ea85a03e4e44dfbb611d6cf438250dbb62ceb72b7782ce517ff41400202\",\"dweb:/ipfs/QmPifGr74aTiZKCKv8m9Vex5AcrJPQ3c83Ju1p7AWv6LGM\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100395760e060020a60003504639d4f8b16811461003e578063e54f8f1b14610060575b600080fd5b600054600160a060020a031660405161005791906101aa565b60405180910390f35b61007361006e36600461015c565b610075565b005b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b906100a89033906004016101aa565b60206040518083038186803b1580156100c057600080fd5b505afa1580156100d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f8919061018a565b61013a5760405160e560020a62461bcd028152602060048201526009602482015260b960020a682327a92124a22222a702604482015260640160405180910390fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b60006020828403121561016d578081fd5b8135600160a060020a0381168114610183578182fd5b9392505050565b60006020828403121561019b578081fd5b81518015158114610183578182fd5b600160a060020a039190911681526020019056fea2646970667358221220e9dd130304f96787b8bcf725c3c7679ef6bd66b06e64ea1f2da3e9574618a90564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100395760e060020a60003504639d4f8b16811461003e578063e54f8f1b14610060575b600080fd5b600054600160a060020a031660405161005791906101aa565b60405180910390f35b61007361006e36600461015c565b610075565b005b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b906100a89033906004016101aa565b60206040518083038186803b1580156100c057600080fd5b505afa1580156100d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f8919061018a565b61013a5760405160e560020a62461bcd028152602060048201526009602482015260b960020a682327a92124a22222a702604482015260640160405180910390fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b60006020828403121561016d578081fd5b8135600160a060020a0381168114610183578182fd5b9392505050565b60006020828403121561019b578081fd5b81518015158114610183578182fd5b600160a060020a039190911681526020019056fea2646970667358221220e9dd130304f96787b8bcf725c3c7679ef6bd66b06e64ea1f2da3e9574618a90564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1169:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:1:20",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:3:20",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:20",
                "type": ""
              }
            ],
            "src": "14:306:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:20",
                "type": ""
              }
            ],
            "src": "325:297:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "728:102:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "738:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "746:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "738:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "780:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "795:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "811:1:20",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "814:3:20",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "807:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "807:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "820:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "803:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "803:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "791:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:51:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "697:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "708:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "719:4:20",
                "type": ""
              }
            ],
            "src": "627:203:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1009:158:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1026:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1037:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1019:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1019:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1060:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1071:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1056:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1076:1:20",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:29:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1049:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1109:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1094:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1114:11:20",
                        "type": "",
                        "value": "FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1087:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1087:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1135:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1147:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1158:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1143:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1143:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1135:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "986:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1000:4:20",
                "type": ""
              }
            ],
            "src": "835:332:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "111:349:11:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "111:349:11:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;111:349:11;;;;;;;;;;;;;;;;;356:102;406:7;440:10;-1:-1:-1;;;;;440:10:11;356:102;;;;;;:::i;:::-;;;;;;;;163:187;;;;;;:::i;:::-;;:::i;:::-;;;238:10;;:40;;-1:-1:-1;;;;;238:40:11;;-1:-1:-1;;;;;238:10:11;;;;:28;;:40;;267:10;;238:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;230:62;;;;-1:-1:-1;;;;;230:62:11;;1037:2:20;230:62:11;;;1019:21:20;1076:1;1056:18;;;1049:29;-1:-1:-1;;;;;1094:18:20;;;1087:39;1143:18;;230:62:11;;;;;;;;302:10;:41;;-1:-1:-1;;;;;;302:41:11;-1:-1:-1;;;;;302:41:11;;;;;;;;;;163:187::o;14:306:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:20;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:20:o;325:297::-;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:203;-1:-1:-1;;;;;791:32:20;;;;773:51;;761:2;746:18;;728:102::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0;\n\nimport {IESDContext} from \"../itf/IESDContext.sol\";\n\ncontract Context {\n    IESDContext ESDContext;\n\n    function updateContext(address _contextAddress) external {\n        require(ESDContext.isViaUserContract(msg.sender), \"FORBIDDEN\");\n        ESDContext = IESDContext(_contextAddress);\n    }\n\n    function getContextAddress() public view returns (address) {\n        return address(ESDContext);\n    }\n}",
  "sourcePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol",
  "ast": {
    "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol",
    "exportedSymbols": {
      "Context": [
        3882
      ],
      "IESDContext": [
        3505
      ]
    },
    "id": 3883,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3844,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IESDContext.sol",
        "file": "../itf/IESDContext.sol",
        "id": 3846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3883,
        "sourceUnit": 3506,
        "src": "58:51:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3845,
              "name": "IESDContext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:11:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3882,
        "linearizedBaseContracts": [
          3882
        ],
        "name": "Context",
        "nameLocation": "120:7:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3849,
            "mutability": "mutable",
            "name": "ESDContext",
            "nameLocation": "146:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3882,
            "src": "134:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IESDContext_$3505",
              "typeString": "contract IESDContext"
            },
            "typeName": {
              "id": 3848,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3847,
                "name": "IESDContext",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3505,
                "src": "134:11:11"
              },
              "referencedDeclaration": 3505,
              "src": "134:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IESDContext_$3505",
                "typeString": "contract IESDContext"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3869,
              "nodeType": "Block",
              "src": "220:130:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3857,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "267:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "267:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3855,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "238:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "238:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "238:40:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "280:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "230:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:62:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3862,
                  "nodeType": "ExpressionStatement",
                  "src": "230:62:11"
                },
                {
                  "expression": {
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3863,
                      "name": "ESDContext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3849,
                      "src": "302:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IESDContext_$3505",
                        "typeString": "contract IESDContext"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3865,
                          "name": "_contextAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "327:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3864,
                        "name": "IESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3505,
                        "src": "315:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IESDContext_$3505_$",
                          "typeString": "type(contract IESDContext)"
                        }
                      },
                      "id": 3866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "315:28:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IESDContext_$3505",
                        "typeString": "contract IESDContext"
                      }
                    },
                    "src": "302:41:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IESDContext_$3505",
                      "typeString": "contract IESDContext"
                    }
                  },
                  "id": 3868,
                  "nodeType": "ExpressionStatement",
                  "src": "302:41:11"
                }
              ]
            },
            "functionSelector": "e54f8f1b",
            "id": 3870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateContext",
            "nameLocation": "172:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3851,
                  "mutability": "mutable",
                  "name": "_contextAddress",
                  "nameLocation": "194:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3870,
                  "src": "186:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "185:25:11"
            },
            "returnParameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:11"
            },
            "scope": 3882,
            "src": "163:187:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3880,
              "nodeType": "Block",
              "src": "415:43:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3877,
                        "name": "ESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "440:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      ],
                      "id": 3876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "432:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "432:7:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "432:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3874,
                  "id": 3879,
                  "nodeType": "Return",
                  "src": "425:26:11"
                }
              ]
            },
            "functionSelector": "9d4f8b16",
            "id": 3881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContextAddress",
            "nameLocation": "365:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:2:11"
            },
            "returnParameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3881,
                  "src": "406:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:9:11"
            },
            "scope": 3882,
            "src": "356:102:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3883,
        "src": "111:349:11",
        "usedErrors": []
      }
    ],
    "src": "32:428:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol",
    "exportedSymbols": {
      "Context": [
        3882
      ],
      "IESDContext": [
        3505
      ]
    },
    "id": 3883,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3844,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IESDContext.sol",
        "file": "../itf/IESDContext.sol",
        "id": 3846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3883,
        "sourceUnit": 3506,
        "src": "58:51:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3845,
              "name": "IESDContext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:11:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3882,
        "linearizedBaseContracts": [
          3882
        ],
        "name": "Context",
        "nameLocation": "120:7:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3849,
            "mutability": "mutable",
            "name": "ESDContext",
            "nameLocation": "146:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3882,
            "src": "134:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IESDContext_$3505",
              "typeString": "contract IESDContext"
            },
            "typeName": {
              "id": 3848,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3847,
                "name": "IESDContext",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3505,
                "src": "134:11:11"
              },
              "referencedDeclaration": 3505,
              "src": "134:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IESDContext_$3505",
                "typeString": "contract IESDContext"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3869,
              "nodeType": "Block",
              "src": "220:130:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3857,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "267:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "267:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3855,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "238:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "238:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "238:40:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "280:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "230:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:62:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3862,
                  "nodeType": "ExpressionStatement",
                  "src": "230:62:11"
                },
                {
                  "expression": {
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3863,
                      "name": "ESDContext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3849,
                      "src": "302:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IESDContext_$3505",
                        "typeString": "contract IESDContext"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3865,
                          "name": "_contextAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "327:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3864,
                        "name": "IESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3505,
                        "src": "315:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IESDContext_$3505_$",
                          "typeString": "type(contract IESDContext)"
                        }
                      },
                      "id": 3866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "315:28:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IESDContext_$3505",
                        "typeString": "contract IESDContext"
                      }
                    },
                    "src": "302:41:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IESDContext_$3505",
                      "typeString": "contract IESDContext"
                    }
                  },
                  "id": 3868,
                  "nodeType": "ExpressionStatement",
                  "src": "302:41:11"
                }
              ]
            },
            "functionSelector": "e54f8f1b",
            "id": 3870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateContext",
            "nameLocation": "172:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3851,
                  "mutability": "mutable",
                  "name": "_contextAddress",
                  "nameLocation": "194:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3870,
                  "src": "186:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "185:25:11"
            },
            "returnParameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:11"
            },
            "scope": 3882,
            "src": "163:187:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3880,
              "nodeType": "Block",
              "src": "415:43:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3877,
                        "name": "ESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "440:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      ],
                      "id": 3876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "432:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "432:7:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "432:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3874,
                  "id": 3879,
                  "nodeType": "Return",
                  "src": "425:26:11"
                }
              ]
            },
            "functionSelector": "9d4f8b16",
            "id": 3881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContextAddress",
            "nameLocation": "365:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:2:11"
            },
            "returnParameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3881,
                  "src": "406:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:9:11"
            },
            "scope": 3882,
            "src": "356:102:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3883,
        "src": "111:349:11",
        "usedErrors": []
      }
    ],
    "src": "32:428:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-11T07:49:57.531Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}