{
  "contractName": "SignReward",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "easydealAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContextAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signRecords",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastSignedTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "continuousNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "totalRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signRewardBaseAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contextAddress",
          "type": "address"
        }
      ],
      "name": "updateContext",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sign",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "interval",
          "type": "uint32"
        }
      ],
      "name": "updateSignInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "updateSignRewardBaseAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"easydealAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContextAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastSignedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"continuousNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signRewardBaseAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contextAddress\",\"type\":\"address\"}],\"name\":\"updateContext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"interval\",\"type\":\"uint32\"}],\"name\":\"updateSignInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateSignRewardBaseAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/SignReward.sol\":\"SignReward\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/SignReward.sol\":{\"keccak256\":\"0x20337a9d22013b8431dc2e954c877811716d8750600684c5e17d232d53e118e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cd6e5e7ef0153482b172d926cee2771801fc831a09adb49e6d6889151204c1\",\"dweb:/ipfs/QmQJQEWxow9DVVMRJK1CtooY9MxefZ2jCHLSEE7fa2BcCA\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IBEP20.sol\":{\"keccak256\":\"0xffef0083912f0e172057e53aed96ea379bb3bb85ab95439e351bb545ac90b878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97900b3a3f7f2076bfca0929c7d86340df735585c5365d26b2033df4a28dba04\",\"dweb:/ipfs/QmdSVC5y3Cv4772q8dKd2LkvQ9q2CbwqoBb3rUfLPn4sNb\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IESDContext.sol\":{\"keccak256\":\"0xd8efdae328e62f8102fbc1e2f17abace8246a04b763ef0270db9a60c40b0bdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4668bb3a68f5c99a82f5e4234294beca94f0a27bfc4e50351b55d242de84a4c7\",\"dweb:/ipfs/QmfLtFYs2wjKbhzbPsgbEg8FBnrxvmzbu6KJatHLboFgZq\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Address.sol\":{\"keccak256\":\"0x35fd9e3814274b72a7ee4084be75f9f68191f28944cbb7ba70e4e404950f3ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ade88070ccbab28fdcf2f7033498b6f41b49ccf208097698b231e6e6ae490c0f\",\"dweb:/ipfs/Qmaaq5QXRXmjon6mine4i67MaSAxYpux1gev5vYyWfPRd8\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol\":{\"keccak256\":\"0xdd306bf6a1a37b60ac621ca0966c65e3ffba25f09a7c453ba6b0134b89e176f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8d22ea85a03e4e44dfbb611d6cf438250dbb62ceb72b7782ce517ff41400202\",\"dweb:/ipfs/QmPifGr74aTiZKCKv8m9Vex5AcrJPQ3c83Ju1p7AWv6LGM\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeBEP20.sol\":{\"keccak256\":\"0xce4ece9302527fce8cf03063f14b5c83c5a54a733bf9d21d48bc3d3e1ce45e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1356ccbca73865b4dd9c9340957c22fd337a58912bfee4218ec60fd3d50620da\",\"dweb:/ipfs/Qmb3GqsbZdC6WxRWPSUtpSDooxNkc4UK8CwuYvVVp8GCQe\"]},\"/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x538743912ff7466e0ef6dbfd8ab1abf1a433e1e214760ba7e19cb376ea5bf10f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3592137b9177c16bbfd70e5831b6a6c91618f4ef0d79b868d38a9f14e2c44641\",\"dweb:/ipfs/Qmcfin9LSv6TxxPvLvXVTiym59TWnzqCor4U5uafA8itXU\"]}},\"version\":1}",
  "bytecode": "0x6080604052610258600255670de0b6b3a764000060035534801561002257600080fd5b50604051610cd4380380610cd483398101604081905261004191610066565b60018054600160a060020a031916600160a060020a0392909216919091179055610094565b600060208284031215610077578081fd5b8151600160a060020a038116811461008d578182fd5b9392505050565b610c31806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100865760e060020a60003504632ca15122811461008b578063773d29ae146100a85780637b63fef6146100bf5780639d4f8b16146100d4578063a4d7e0ec146100ee578063c3e2ceab14610101578063d57c6abb14610156578063e54f8f1b1461015f578063f90f082814610172575b600080fd5b610093610185565b60405190151581526020015b60405180910390f35b6100b160035481565b60405190815260200161009f565b6100d26100cd366004610a2b565b61040b565b005b600054600160a060020a03165b60405161009f9190610a7f565b6100d26100fc366004610a13565b6104b8565b61013661010f3660046109cc565b600460205260009081526040902080546001820154600290920154909163ffffffff169083565b6040805193845263ffffffff90921660208401529082015260600161009f565b6100b160025481565b6100d261016d3660046109cc565b61055f565b6005546100e190600160a060020a031681565b6000805460405160e560020a63079e4ae3028152600160a060020a039091169063f3c95c60906101b9903390600401610a7f565b60206040518083038186803b1580156101d157600080fd5b505afa1580156101e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020991906109f3565b6102315760405160e560020a62461bcd02815260040161022890610ac6565b60405180910390fd5b6000805460405160e360020a631dc6621f028152600160a060020a039091169063ee3310f890610265903390600401610a7f565b60206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b59190610a47565b336000908152600460205260409020600254815492935090916102d791610623565b421161031c5760405160e560020a62461bcd02815260206004820152600e6024820152609260020a6d105314915051164814d251d39151026044820152606401610228565b600181015463ffffffff166000610334601e83610b40565b61033f906001610b04565b90506000610378610351866001610b04565b63ffffffff166103728463ffffffff1660035461068e90919063ffffffff16565b9061068e565b60015490915061039290600160a060020a03163383610713565b6002805461039f91610b63565b84546103ab9190610aec565b4211156103bb57600192506103c9565b6103c6600184610b04565b92505b60018401805463ffffffff191663ffffffff85161790554284556002840180548291906000906103fa908490610aec565b909155506001979650505050505050565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b9061043e903390600401610a7f565b60206040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e91906109f3565b6104ad5760405160e560020a62461bcd02815260040161022890610ac6565b63ffffffff16600255565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b906104eb903390600401610a7f565b60206040518083038186803b15801561050357600080fd5b505afa158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b91906109f3565b61055a5760405160e560020a62461bcd02815260040161022890610ac6565b600355565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b90610592903390600401610a7f565b60206040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e291906109f3565b6106015760405160e560020a62461bcd02815260040161022890610ac6565b60008054600160a060020a031916600160a060020a0392909216919091179055565b6000806106308385610aec565b9050838110156106855760405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610228565b90505b92915050565b60008261069d57506000610688565b60006106a98385610b63565b9050826106b68583610b2c565b146106855760405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f604482015260f860020a6077026064820152608401610228565b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a031660e060020a63a9059cbb0217905261076890849061076d565b505050565b60006107c2826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166108459092919063ffffffff16565b80519091501561076857808060200190518101906107e091906109f3565b6107685760405160e560020a62461bcd02815260206004820152602a60248201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e604482015260b260020a691bdd081cdd58d8d95959026064820152608401610228565b6060610854848460008561085e565b90505b9392505050565b606030318311156108c65760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f604482015260d260020a651c8818d85b1b026064820152608401610228565b843b6109175760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610228565b60008086600160a060020a031685876040516109339190610a63565b60006040518083038185875af1925050503d8060008114610970576040519150601f19603f3d011682016040523d82523d6000602084013e610975565b606091505b5091509150610985828286610990565b979650505050505050565b6060831561099f575081610857565b8251156109af5782518084602001fd5b8160405160e560020a62461bcd0281526004016102289190610a93565b6000602082840312156109dd578081fd5b8135600160a060020a0381168114610685578182fd5b600060208284031215610a04578081fd5b81518015158114610685578182fd5b600060208284031215610a24578081fd5b5035919050565b600060208284031215610a3c578081fd5b813561068581610be6565b600060208284031215610a58578081fd5b815161068581610be6565b60008251610a75818460208701610b82565b9190910192915050565b600160a060020a0391909116815260200190565b6020815260008251806020840152610ab2816040850160208701610b82565b601f01601f19169190910160400192915050565b602080825260099082015260b960020a682327a92124a22222a702604082015260600190565b60008219821115610aff57610aff610bb2565b500190565b600063ffffffff808316818516808303821115610b2357610b23610bb2565b01949350505050565b600082610b3b57610b3b610bcc565b500490565b600063ffffffff80841680610b5757610b57610bcc565b92169190910492915050565b6000816000190483118215151615610b7d57610b7d610bb2565b500290565b60005b83811015610b9d578181015183820152602001610b85565b83811115610bac576000848401525b50505050565b60e060020a634e487b710260009081526011600452602490fd5b60e060020a634e487b710260009081526012600452602490fd5b63ffffffff81168114610bf857600080fd5b5056fea26469706673582212207d60dea7f449600fd0d734e7b6e4bd89e895738ebf02d61012ec58582e2e80df64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100865760e060020a60003504632ca15122811461008b578063773d29ae146100a85780637b63fef6146100bf5780639d4f8b16146100d4578063a4d7e0ec146100ee578063c3e2ceab14610101578063d57c6abb14610156578063e54f8f1b1461015f578063f90f082814610172575b600080fd5b610093610185565b60405190151581526020015b60405180910390f35b6100b160035481565b60405190815260200161009f565b6100d26100cd366004610a2b565b61040b565b005b600054600160a060020a03165b60405161009f9190610a7f565b6100d26100fc366004610a13565b6104b8565b61013661010f3660046109cc565b600460205260009081526040902080546001820154600290920154909163ffffffff169083565b6040805193845263ffffffff90921660208401529082015260600161009f565b6100b160025481565b6100d261016d3660046109cc565b61055f565b6005546100e190600160a060020a031681565b6000805460405160e560020a63079e4ae3028152600160a060020a039091169063f3c95c60906101b9903390600401610a7f565b60206040518083038186803b1580156101d157600080fd5b505afa1580156101e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020991906109f3565b6102315760405160e560020a62461bcd02815260040161022890610ac6565b60405180910390fd5b6000805460405160e360020a631dc6621f028152600160a060020a039091169063ee3310f890610265903390600401610a7f565b60206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b59190610a47565b336000908152600460205260409020600254815492935090916102d791610623565b421161031c5760405160e560020a62461bcd02815260206004820152600e6024820152609260020a6d105314915051164814d251d39151026044820152606401610228565b600181015463ffffffff166000610334601e83610b40565b61033f906001610b04565b90506000610378610351866001610b04565b63ffffffff166103728463ffffffff1660035461068e90919063ffffffff16565b9061068e565b60015490915061039290600160a060020a03163383610713565b6002805461039f91610b63565b84546103ab9190610aec565b4211156103bb57600192506103c9565b6103c6600184610b04565b92505b60018401805463ffffffff191663ffffffff85161790554284556002840180548291906000906103fa908490610aec565b909155506001979650505050505050565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b9061043e903390600401610a7f565b60206040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e91906109f3565b6104ad5760405160e560020a62461bcd02815260040161022890610ac6565b63ffffffff16600255565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b906104eb903390600401610a7f565b60206040518083038186803b15801561050357600080fd5b505afa158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b91906109f3565b61055a5760405160e560020a62461bcd02815260040161022890610ac6565b600355565b60005460405160e060020a636bb8c52b028152600160a060020a0390911690636bb8c52b90610592903390600401610a7f565b60206040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e291906109f3565b6106015760405160e560020a62461bcd02815260040161022890610ac6565b60008054600160a060020a031916600160a060020a0392909216919091179055565b6000806106308385610aec565b9050838110156106855760405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610228565b90505b92915050565b60008261069d57506000610688565b60006106a98385610b63565b9050826106b68583610b2c565b146106855760405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f604482015260f860020a6077026064820152608401610228565b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a031660e060020a63a9059cbb0217905261076890849061076d565b505050565b60006107c2826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166108459092919063ffffffff16565b80519091501561076857808060200190518101906107e091906109f3565b6107685760405160e560020a62461bcd02815260206004820152602a60248201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e604482015260b260020a691bdd081cdd58d8d95959026064820152608401610228565b6060610854848460008561085e565b90505b9392505050565b606030318311156108c65760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f604482015260d260020a651c8818d85b1b026064820152608401610228565b843b6109175760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610228565b60008086600160a060020a031685876040516109339190610a63565b60006040518083038185875af1925050503d8060008114610970576040519150601f19603f3d011682016040523d82523d6000602084013e610975565b606091505b5091509150610985828286610990565b979650505050505050565b6060831561099f575081610857565b8251156109af5782518084602001fd5b8160405160e560020a62461bcd0281526004016102289190610a93565b6000602082840312156109dd578081fd5b8135600160a060020a0381168114610685578182fd5b600060208284031215610a04578081fd5b81518015158114610685578182fd5b600060208284031215610a24578081fd5b5035919050565b600060208284031215610a3c578081fd5b813561068581610be6565b600060208284031215610a58578081fd5b815161068581610be6565b60008251610a75818460208701610b82565b9190910192915050565b600160a060020a0391909116815260200190565b6020815260008251806020840152610ab2816040850160208701610b82565b601f01601f19169190910160400192915050565b602080825260099082015260b960020a682327a92124a22222a702604082015260600190565b60008219821115610aff57610aff610bb2565b500190565b600063ffffffff808316818516808303821115610b2357610b23610bb2565b01949350505050565b600082610b3b57610b3b610bcc565b500490565b600063ffffffff80841680610b5757610b57610bcc565b92169190910492915050565b6000816000190483118215151615610b7d57610b7d610bb2565b500290565b60005b83811015610b9d578181015183820152602001610b85565b83811115610bac576000848401525b50505050565b60e060020a634e487b710260009081526011600452602490fd5b60e060020a634e487b710260009081526012600452602490fd5b63ffffffff81168114610bf857600080fd5b5056fea26469706673582212207d60dea7f449600fd0d734e7b6e4bd89e895738ebf02d61012ec58582e2e80df64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:1:20",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "256:3:20",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:20",
                "type": ""
              }
            ],
            "src": "14:310:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7353:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:1:20",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:3:20",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:20",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:20"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:20",
                "type": ""
              }
            ],
            "src": "14:306:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:20",
                "type": ""
              }
            ],
            "src": "325:297:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:120:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "743:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "752:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "760:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "745:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "745:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "745:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "718:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "727:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "739:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "710:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "707:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "778:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "788:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "663:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "674:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "686:6:20",
                "type": ""
              }
            ],
            "src": "627:190:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "891:186:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "937:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "946:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "954:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "939:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "939:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "939:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "912:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "921:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "908:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "933:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "904:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "901:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "972:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "998:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "985:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "976:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1041:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1017:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1017:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1056:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1066:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1056:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "857:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "868:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "880:6:20",
                "type": ""
              }
            ],
            "src": "822:255:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:179:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:26:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1217:6:20"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1225:6:20"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:22:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:22:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1243:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1256:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1247:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1305:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1281:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1281:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1281:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1320:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1330:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1320:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1128:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1139:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:20",
                "type": ""
              }
            ],
            "src": "1082:259:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1483:137:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1493:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1513:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1507:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1497:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1555:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1563:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:17:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1570:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1575:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1529:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:53:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1529:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1591:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1602:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1607:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1598:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1598:16:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1591:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1459:3:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1464:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1475:3:20",
                "type": ""
              }
            ],
            "src": "1346:274:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:102:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1736:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1748:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1759:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1744:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1736:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1778:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1793:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1809:1:20",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1812:3:20",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "1805:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1805:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1818:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1801:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1801:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1789:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1789:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1771:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1771:51:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1695:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1706:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1717:4:20",
                "type": ""
              }
            ],
            "src": "1625:203:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1962:145:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1972:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1984:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1995:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1980:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1972:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2014:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2029:6:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2045:1:20",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2048:3:20",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2041:11:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2054:1:20",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2037:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2037:19:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2025:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2025:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2007:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2078:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2074:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:18:20"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2094:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2067:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2067:34:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1923:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1934:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1942:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1953:4:20",
                "type": ""
              }
            ],
            "src": "1833:274:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2207:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2217:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2229:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2240:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2225:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2217:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2259:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2284:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2277:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2277:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2270:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2270:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2252:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2252:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2252:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2176:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2187:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2198:4:20",
                "type": ""
              }
            ],
            "src": "2112:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2425:262:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2442:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2453:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2435:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2435:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2465:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2485:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2479:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2479:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2469:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2512:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2523:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2508:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2508:18:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2528:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2501:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2501:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2501:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2570:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2578:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2566:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2566:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2587:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2598:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2583:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:18:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2603:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2544:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:66:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2544:66:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2619:62:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2635:9:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2662:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2650:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2650:15:20"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2671:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2667:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2667:7:20"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2646:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2646:29:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2631:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:45:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2627:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2627:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2619:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2394:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2405:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2416:4:20",
                "type": ""
              }
            ],
            "src": "2304:383:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2866:164:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2883:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2876:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2876:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2917:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2928:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2913:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2913:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2933:2:20",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2906:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2906:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2956:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2967:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2952:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2952:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2972:16:20",
                        "type": "",
                        "value": "ALREADY SIGNED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2945:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:44:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2945:44:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2998:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3010:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3021:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3006:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2998:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2843:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2857:4:20",
                "type": ""
              }
            ],
            "src": "2692:338:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3209:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3226:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3237:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3260:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3271:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3256:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3256:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3299:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3295:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3315:34:20",
                        "type": "",
                        "value": "SafeBEP20: BEP20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3288:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3288:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3370:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3381:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3366:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3366:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3386:12:20",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3359:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3359:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3359:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3408:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3420:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3416:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3408:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3186:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3200:4:20",
                "type": ""
              }
            ],
            "src": "3035:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3620:177:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3637:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3648:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3630:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3630:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3671:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3682:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3687:2:20",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3660:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3660:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3660:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3710:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3721:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3706:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3706:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3726:29:20",
                        "type": "",
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3699:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3699:57:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3699:57:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3765:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3777:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3788:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3773:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3765:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3597:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3611:4:20",
                "type": ""
              }
            ],
            "src": "3446:351:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3976:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3993:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4004:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3986:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3986:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3986:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4027:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4038:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4023:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4023:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4043:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4016:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4016:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4016:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4066:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4077:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4062:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4062:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4082:34:20",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4055:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4055:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4055:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4137:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4148:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4133:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4133:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4153:8:20",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4126:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4126:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4171:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4183:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4194:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4179:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4171:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3953:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3967:4:20",
                "type": ""
              }
            ],
            "src": "3802:402:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4383:158:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4400:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4411:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4393:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4393:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4393:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4434:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4445:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4430:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4430:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4450:1:20",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4423:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4423:29:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4423:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4472:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4483:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4468:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4468:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4488:11:20",
                        "type": "",
                        "value": "FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4461:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4461:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4461:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4509:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4521:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4532:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4517:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4517:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4509:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4360:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4374:4:20",
                "type": ""
              }
            ],
            "src": "4209:332:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4720:223:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4737:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4748:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4730:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4730:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4730:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4771:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4782:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4767:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4767:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4787:2:20",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4760:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4760:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4760:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4810:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4821:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4806:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4806:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4826:34:20",
                        "type": "",
                        "value": "SafeMath: multiplication overflo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4799:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4799:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4799:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4881:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4892:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4877:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4877:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4897:3:20",
                        "type": "",
                        "value": "w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4870:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4870:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4870:31:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4922:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4933:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4918:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4910:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4697:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4711:4:20",
                "type": ""
              }
            ],
            "src": "4546:397:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5122:179:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5139:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5150:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5132:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5132:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5132:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5173:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5184:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5169:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5189:2:20",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5162:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5162:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5212:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5223:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5208:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5208:18:20"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5228:31:20",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5201:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5201:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5201:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5269:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5281:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5292:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5277:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5269:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5099:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5113:4:20",
                "type": ""
              }
            ],
            "src": "4948:353:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5407:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5417:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5429:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5440:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5425:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5417:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5459:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5470:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5452:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5452:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5376:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5387:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5398:4:20",
                "type": ""
              }
            ],
            "src": "5306:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5643:179:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5653:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5665:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5676:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5661:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5653:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5695:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5706:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5688:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5688:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5688:25:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5733:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5744:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5729:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5729:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5753:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5761:10:20",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5749:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5749:23:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5722:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5722:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5722:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5793:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5804:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:18:20"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5809:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5782:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5782:34:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint32_t_uint256__to_t_uint256_t_uint32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5596:9:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5607:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5615:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5623:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5634:4:20",
                "type": ""
              }
            ],
            "src": "5488:334:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5875:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5902:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5904:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5904:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5904:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5891:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5898:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5894:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5894:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5888:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5888:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5885:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5933:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5944:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5947:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5940:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5933:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5858:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5861:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5867:3:20",
                "type": ""
              }
            ],
            "src": "5827:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6007:181:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6017:20:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6027:10:20",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6021:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6046:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6061:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6064:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6057:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6057:10:20"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "6050:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6076:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6091:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6094:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6087:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:10:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "6080:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6131:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6133:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6133:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6133:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6112:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6121:2:20"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "6125:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6117:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6117:12:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6109:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6109:21:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6106:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6162:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6173:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6178:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6169:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6169:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6162:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5990:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5993:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5999:3:20",
                "type": ""
              }
            ],
            "src": "5960:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6239:74:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6262:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6264:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6264:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6264:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6259:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6252:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6252:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6249:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6293:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6302:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6305:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6298:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6298:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6293:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6224:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6227:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6233:1:20",
                "type": ""
              }
            ],
            "src": "6193:120:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6363:146:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6373:20:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6383:10:20",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6377:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6402:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6417:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6420:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6413:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6413:10:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "6406:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6447:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6449:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6449:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6449:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6442:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6435:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6435:11:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6432:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6478:25:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6491:1:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6494:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6487:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6487:10:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6499:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6483:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6483:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6478:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6348:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6351:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6357:1:20",
                "type": ""
              }
            ],
            "src": "6318:191:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6566:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6625:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6627:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6627:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6627:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6597:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6590:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6590:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6583:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6583:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6605:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6616:1:20",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6612:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6612:6:20"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6620:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6608:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6608:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6602:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6602:21:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6579:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6579:45:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6576:2:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6656:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6671:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6674:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6667:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6656:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6545:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6548:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6554:7:20",
                "type": ""
              }
            ],
            "src": "6514:168:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6740:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6750:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6759:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6754:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6819:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6844:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6849:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6840:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6840:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6863:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6868:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6859:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6859:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6853:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6853:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6833:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6833:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6833:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6780:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6783:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6777:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6791:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6793:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6802:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6805:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6798:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6798:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6793:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6773:3:20",
                    "statements": []
                  },
                  "src": "6769:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6908:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6921:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6926:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6917:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6917:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6935:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6910:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6910:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6910:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6897:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6900:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6894:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6894:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6891:2:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6718:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6723:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6728:6:20",
                "type": ""
              }
            ],
            "src": "6687:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6982:103:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6999:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7006:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7022:1:20",
                                "type": "",
                                "value": "2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7025:3:20",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "exp",
                              "nodeType": "YulIdentifier",
                              "src": "7018:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7018:11:20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "7002:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7002:28:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6992:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6992:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6992:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7047:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7050:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7040:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7040:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7071:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7074:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7064:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7064:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7064:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6950:135:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7122:103:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7139:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7146:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7162:1:20",
                                "type": "",
                                "value": "2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7165:3:20",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "exp",
                              "nodeType": "YulIdentifier",
                              "src": "7158:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7158:11:20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "7142:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7142:28:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7132:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7132:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7132:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7187:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7190:4:20",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7180:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7180:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7180:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7211:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7214:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7204:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7204:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7204:15:20"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "7090:135:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7274:77:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7329:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7338:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7341:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7331:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7331:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7331:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7297:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7308:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7315:10:20",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7304:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7304:22:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7294:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7294:33:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7287:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7287:41:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7284:2:20"
                }
              ]
            },
            "name": "validator_revert_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7263:5:20",
                "type": ""
              }
            ],
            "src": "7230:121:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_uint32(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_uint32(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"ALREADY SIGNED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeBEP20: BEP20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint32_t_uint256__to_t_uint256_t_uint32_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let _1 := 0xffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, mul(0x4e487b71, exp(2, 224)))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, mul(0x4e487b71, exp(2, 224)))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "236:2006:6:-:0;;;521:10;491:40;;575:12;537:50;;686:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;732:8;:32;;-1:-1:-1;;;;;;732:32:6;-1:-1:-1;;;;;732:32:6;;;;;;;;;;236:2006;;14:310:20;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:20;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:20:o;:::-;236:2006:6;;;;;;",
  "deployedSourceMap": "236:2006:6:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;236:2006:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:1040;;;:::i;:::-;;;2277:14:20;;2270:22;2252:41;;2240:2;2225:18;777:1040:6;;;;;;;;537:50;;;;;;;;;5452:25:20;;;5440:2;5425:18;537:50:6;5407:76:20;1888:166:6;;;;;;:::i;:::-;;:::i;:::-;;356:102:11;406:7;440:10;-1:-1:-1;;;;;440:10:11;356:102;;;;;;;:::i;2060:179:6:-;;;;;;:::i;:::-;;:::i;594:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5688:25:20;;;5761:10;5749:23;;;5744:2;5729:18;;5722:51;5789:18;;;5782:34;5676:2;5661:18;594:49:6;5643:179:20;491:40:6;;;;;;163:187:11;;;;;;:::i;:::-;;:::i;649:30:6:-;;;;;-1:-1:-1;;;;;649:30:6;;;777:1040;809:4;833:10;;:34;;-1:-1:-1;;;;;833:34:6;;-1:-1:-1;;;;;833:10:6;;;;:22;;:34;;856:10;;833:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;825:56;;;;-1:-1:-1;;;;;825:56:6;;;;;;;:::i;:::-;;;;;;;;;900:19;922:10;;:43;;-1:-1:-1;;;;;922:43:6;;-1:-1:-1;;;;;922:10:6;;;;:31;;:43;;954:10;;922:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1015:10;975:25;1003:23;;;:11;:23;;;;;1093:12;;1062:26;;900:65;;-1:-1:-1;1003:23:6;;1062:44;;:30;:44::i;:::-;1044:15;:62;1036:89;;;;-1:-1:-1;;;;;1036:89:6;;2894:2:20;1036:89:6;;;2876:21:20;2933:2;2913:18;;;2906:30;-1:-1:-1;;;;;2952:18:20;;;2945:44;3006:18;;1036:89:6;2866:164:20;1036:89:6;1162:23;;;;;;1136;1220:21;1239:2;1162:23;1220:21;:::i;:::-;:25;;1244:1;1220:25;:::i;:::-;1195:50;-1:-1:-1;1255:20:6;1278:61;1324:14;:12;1337:1;1324:14;:::i;:::-;1278:61;;:41;1303:15;1278:41;;:20;;:24;;:41;;;;:::i;:::-;:45;;:61::i;:::-;1374:8;;1255:84;;-1:-1:-1;1374:47:6;;-1:-1:-1;;;;;1374:8:6;1396:10;1255:84;1374:21;:47::i;:::-;1519:12;;;1517:14;;;:::i;:::-;1488:26;;:43;;;;:::i;:::-;1470:15;:61;1466:164;;;1566:1;1547:20;;1466:164;;;1598:21;1618:1;1598:21;;:::i;:::-;;;1466:164;1640:23;;;:42;;-1:-1:-1;;1640:42:6;;;;;;;1721:15;1692:44;;1746:19;;;:35;;1769:12;;1746:19;-1:-1:-1;;1746:35:6;;1769:12;;1746:35;:::i;:::-;;;;-1:-1:-1;1806:4:6;;777:1040;-1:-1:-1;;;;;;;777:1040:6:o;1888:166::-;1960:10;;:40;;-1:-1:-1;;;;;1960:40:6;;-1:-1:-1;;;;;1960:10:6;;;;:28;;:40;;1989:10;;1960:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1952:62;;;;-1:-1:-1;;;;;1952:62:6;;;;;;;:::i;:::-;2024:23;;:12;:23;1888:166::o;2060:179::-;2139:10;;:40;;-1:-1:-1;;;;;2139:40:6;;-1:-1:-1;;;;;2139:10:6;;;;:28;;:40;;2168:10;;2139:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:62;;;;-1:-1:-1;;;;;2131:62:6;;;;;;;:::i;:::-;2203:20;:29;2060:179::o;163:187:11:-;238:10;;:40;;-1:-1:-1;;;;;238:40:11;;-1:-1:-1;;;;;238:10:11;;;;:28;;:40;;267:10;;238:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;230:62;;;;-1:-1:-1;;;;;230:62:11;;;;;;;:::i;:::-;302:10;:41;;-1:-1:-1;;;;;;302:41:11;-1:-1:-1;;;;;302:41:11;;;;;;;;;;163:187::o;868:176:17:-;926:7;;957:5;961:1;957;:5;:::i;:::-;945:17;;985:1;980;:6;;972:46;;;;-1:-1:-1;;;;;972:46:17;;3648:2:20;972:46:17;;;3630:21:20;3687:2;3667:18;;;3660:30;3726:29;3706:18;;;3699:57;3773:18;;972:46:17;3620:177:20;972:46:17;1036:1;-1:-1:-1;868:176:17;;;;;:::o;2183:459::-;2241:7;2482:6;2478:45;;-1:-1:-1;2511:1:17;2504:8;;2478:45;2533:9;2545:5;2549:1;2545;:5;:::i;:::-;2533:17;-1:-1:-1;2577:1:17;2568:5;2572:1;2533:17;2568:5;:::i;:::-;:10;2560:56;;;;-1:-1:-1;;;;;2560:56:17;;4748:2:20;2560:56:17;;;4730:21:20;4787:2;4767:18;;;4760:30;4826:34;4806:18;;;4799:62;-1:-1:-1;;;;;4877:18:20;;;4870:31;4918:19;;2560:56:17;4720:223:20;683:175:16;792:58;;;-1:-1:-1;;;;;2025:32:20;;792:58:16;;;2007:51:20;2074:18;;;;2067:34;;;792:58:16;;;;;;;;;;1980:18:20;;;;792:58:16;;;;;;;;-1:-1:-1;;;;;792:58:16;-1:-1:-1;;;;;792:58:16;;;765:86;;785:5;;765:19;:86::i;:::-;683:175;;;:::o;2901:751::-;3320:23;3346:69;3374:4;3346:69;;;;;;;;;;;;;;;;;3354:5;-1:-1:-1;;;;;3346:27:16;;;:69;;;;;:::i;:::-;3429:17;;3320:95;;-1:-1:-1;3429:21:16;3425:221;;3569:10;3558:30;;;;;;;;;;;;:::i;:::-;3550:85;;;;-1:-1:-1;;;;;3550:85:16;;3237:2:20;3550:85:16;;;3219:21:20;3276:2;3256:18;;;3249:30;3315:34;3295:18;;;3288:62;-1:-1:-1;;;;;3366:18:20;;;3359:40;3416:19;;3550:85:16;3209:232:20;3574:193:10;3677:12;3708:52;3730:6;3738:4;3744:1;3747:12;3708:21;:52::i;:::-;3701:59;;3574:193;;;;;;:::o;4601:523::-;4728:12;4768:4;4760:21;:30;-1:-1:-1;4760:30:10;4752:81;;;;-1:-1:-1;;;;;4752:81:10;;4004:2:20;4752:81:10;;;3986:21:20;4043:2;4023:18;;;4016:30;4082:34;4062:18;;;4055:62;-1:-1:-1;;;;;4133:18:20;;;4126:36;4179:19;;4752:81:10;3976:228:20;4752:81:10;1079:20;;4843:60;;;;-1:-1:-1;;;;;4843:60:10;;5150:2:20;4843:60:10;;;5132:21:20;5189:2;5169:18;;;5162:30;5228:31;5208:18;;;5201:59;5277:18;;4843:60:10;5122:179:20;4843:60:10;4974:12;4988:23;5015:6;-1:-1:-1;;;;;5015:11:10;5035:5;5043:4;5015:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:75;;;;5065:52;5083:7;5092:10;5104:12;5065:17;:52::i;:::-;5058:59;4601:523;-1:-1:-1;;;;;;;4601:523:10:o;7084:725::-;7199:12;7227:7;7223:580;;;-1:-1:-1;7257:10:10;7250:17;;7223:580;7368:17;;:21;7364:429;;7626:10;7620:17;7686:15;7673:10;7669:2;7665:19;7658:44;7575:145;7765:12;7758:20;;-1:-1:-1;;;;;7758:20:10;;;;;;;;:::i;14:306:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:20;;220:42;;210:2;;281:6;273;266:22;325:297;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;686:6;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:20;;697:120;-1:-1:-1;697:120:20:o;822:255::-;880:6;933:2;921:9;912:7;908:23;904:32;901:2;;;954:6;946;939:22;901:2;998:9;985:23;1017:30;1041:5;1017:30;:::i;1082:259::-;1151:6;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1225:6;1217;1210:22;1172:2;1262:9;1256:16;1281:30;1305:5;1281:30;:::i;1346:274::-;1475:3;1513:6;1507:13;1529:53;1575:6;1570:3;1563:4;1555:6;1551:17;1529:53;:::i;:::-;1598:16;;;;;1483:137;-1:-1:-1;;1483:137:20:o;1625:203::-;-1:-1:-1;;;;;1789:32:20;;;;1771:51;;1759:2;1744:18;;1726:102::o;2304:383::-;2453:2;2442:9;2435:21;2416:4;2485:6;2479:13;2528:6;2523:2;2512:9;2508:18;2501:34;2544:66;2603:6;2598:2;2587:9;2583:18;2578:2;2570:6;2566:15;2544:66;:::i;:::-;2671:2;2650:15;-1:-1:-1;;2646:29:20;2631:45;;;;2678:2;2627:54;;2425:262;-1:-1:-1;;2425:262:20:o;4209:332::-;4411:2;4393:21;;;4450:1;4430:18;;;4423:29;-1:-1:-1;;;;;4483:2:20;4468:18;;4461:39;4532:2;4517:18;;4383:158::o;5827:128::-;5867:3;5898:1;5894:6;5891:1;5888:13;5885:2;;;5904:18;;:::i;:::-;-1:-1:-1;5940:9:20;;5875:80::o;5960:228::-;5999:3;6027:10;6064:2;6061:1;6057:10;6094:2;6091:1;6087:10;6125:3;6121:2;6117:12;6112:3;6109:21;6106:2;;;6133:18;;:::i;:::-;6169:13;;6007:181;-1:-1:-1;;;;6007:181:20:o;6193:120::-;6233:1;6259;6249:2;;6264:18;;:::i;:::-;-1:-1:-1;6298:9:20;;6239:74::o;6318:191::-;6357:1;6383:10;6420:2;6417:1;6413:10;6442:3;6432:2;;6449:18;;:::i;:::-;6487:10;;6483:20;;;;;6363:146;-1:-1:-1;;6363:146:20:o;6514:168::-;6554:7;6620:1;6616;6612:6;6608:14;6605:1;6602:21;6597:1;6590:9;6583:17;6579:45;6576:2;;;6627:18;;:::i;:::-;-1:-1:-1;6667:9:20;;6566:116::o;6687:258::-;6759:1;6769:113;6783:6;6780:1;6777:13;6769:113;;;6859:11;;;6853:18;6840:11;;;6833:39;6805:2;6798:10;6769:113;;;6900:6;6897:1;6894:13;6891:2;;;6935:1;6926:6;6921:3;6917:16;6910:27;6891:2;;6740:205;;;:::o;6950:135::-;-1:-1:-1;;;;;6999:1:20;6992:39;;;7050:4;7047:1;7040:15;7074:4;;7064:15;7090:135;-1:-1:-1;;;;;7139:1:20;7132:39;;;7190:4;7187:1;7180:15;7214:4;;7204:15;7230:121;7315:10;7308:5;7304:22;7297:5;7294:33;7284:2;;7341:1;7338;7331:12;7284:2;7274:77;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0;\n\nimport {SafeBEP20} from \"./lib/SafeBEP20.sol\";\nimport {SafeMath} from \"./lib/SafeMath.sol\";\nimport {Context} from \"./lib/Context.sol\";\nimport {IBEP20} from \"./itf/IBEP20.sol\";\n\ncontract SignReward is Context {\n    using SafeBEP20 for IBEP20;\n    using SafeMath for uint256;\n\n    IBEP20 ESDToken;\n\n    struct SignRecord {\n        uint256 lastSignedTimestamp;\n        uint32 continuousNumber;\n        uint256 totalRewards;\n    }\n\n    uint256 public signInterval = 10 minutes;\n    uint256 public signRewardBaseAmount = 1 * 10 ** 18;\n\n    mapping(address => SignRecord) public signRecords;\n    address public easydealAddress;\n\n    constructor (address _tokenAddress) {\n        ESDToken = IBEP20(_tokenAddress);\n    }\n\n    function sign() public returns (bool) {\n        require(ESDContext.isValidUser(msg.sender), \"FORBIDDEN\");\n        \n        uint32 lockedWeight = ESDContext.computeLockedWeights(msg.sender);\n        SignRecord storage record = signRecords[msg.sender];\n        require(block.timestamp > record.lastSignedTimestamp.add(signInterval), \"ALREADY SIGNED\");\n\n        uint32 continuousNumber = record.continuousNumber;\n        uint32 additionalTimes = continuousNumber / 30 + 1;\n        uint256 rewardAmount = signRewardBaseAmount.mul(additionalTimes).mul(lockedWeight+1);\n\n        // Reward token\n        ESDToken.safeTransfer(msg.sender, rewardAmount);\n\n        // Interrupt continuation\n        if (block.timestamp > record.lastSignedTimestamp + 2*signInterval) {\n            continuousNumber = 1;\n        } else {\n            continuousNumber += 1;\n        }\n\n        record.continuousNumber = continuousNumber;\n        record.lastSignedTimestamp = block.timestamp;\n        record.totalRewards += rewardAmount;\n       \n        return true;\n    }\n\n    // ============ Proposal execute functions ============\n    \n    function updateSignInterval(uint32 interval) external {\n        require(ESDContext.isViaUserContract(msg.sender), \"FORBIDDEN\");\n        signInterval = interval;\n    }\n\n    function updateSignRewardBaseAmount(uint256 amount) external {\n        require(ESDContext.isViaUserContract(msg.sender), \"FORBIDDEN\");\n        signRewardBaseAmount = amount;\n    }\n\n}",
  "sourcePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/SignReward.sol",
  "ast": {
    "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/SignReward.sol",
    "exportedSymbols": {
      "Context": [
        3882
      ],
      "IBEP20": [
        3413
      ],
      "SafeBEP20": [
        5203
      ],
      "SafeMath": [
        5399
      ],
      "SignReward": [
        3312
      ]
    },
    "id": 3313,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3100,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:6"
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeBEP20.sol",
        "file": "./lib/SafeBEP20.sol",
        "id": 3102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 5204,
        "src": "59:46:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3101,
              "name": "SafeBEP20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "67:9:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeMath.sol",
        "file": "./lib/SafeMath.sol",
        "id": 3104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 5400,
        "src": "106:44:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3103,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "114:8:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol",
        "file": "./lib/Context.sol",
        "id": 3106,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 3883,
        "src": "151:42:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3105,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "159:7:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IBEP20.sol",
        "file": "./itf/IBEP20.sol",
        "id": 3108,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 3414,
        "src": "194:40:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3107,
              "name": "IBEP20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:6:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3109,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3882,
              "src": "259:7:6"
            },
            "id": 3110,
            "nodeType": "InheritanceSpecifier",
            "src": "259:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3312,
        "linearizedBaseContracts": [
          3312,
          3882
        ],
        "name": "SignReward",
        "nameLocation": "245:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3114,
            "libraryName": {
              "id": 3111,
              "name": "SafeBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5203,
              "src": "279:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "273:27:6",
            "typeName": {
              "id": 3113,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3112,
                "name": "IBEP20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "293:6:6"
              },
              "referencedDeclaration": 3413,
              "src": "293:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$3413",
                "typeString": "contract IBEP20"
              }
            }
          },
          {
            "id": 3117,
            "libraryName": {
              "id": 3115,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5399,
              "src": "311:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "305:27:6",
            "typeName": {
              "id": 3116,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "324:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3120,
            "mutability": "mutable",
            "name": "ESDToken",
            "nameLocation": "345:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "338:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBEP20_$3413",
              "typeString": "contract IBEP20"
            },
            "typeName": {
              "id": 3119,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3118,
                "name": "IBEP20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "338:6:6"
              },
              "referencedDeclaration": 3413,
              "src": "338:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$3413",
                "typeString": "contract IBEP20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SignReward.SignRecord",
            "id": 3127,
            "members": [
              {
                "constant": false,
                "id": 3122,
                "mutability": "mutable",
                "name": "lastSignedTimestamp",
                "nameLocation": "396:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "388:27:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3121,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3124,
                "mutability": "mutable",
                "name": "continuousNumber",
                "nameLocation": "432:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "425:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 3123,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3126,
                "mutability": "mutable",
                "name": "totalRewards",
                "nameLocation": "466:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "458:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SignRecord",
            "nameLocation": "367:10:6",
            "nodeType": "StructDefinition",
            "scope": 3312,
            "src": "360:125:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d57c6abb",
            "id": 3130,
            "mutability": "mutable",
            "name": "signInterval",
            "nameLocation": "506:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "491:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 3129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "521:10:6",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "773d29ae",
            "id": 3137,
            "mutability": "mutable",
            "name": "signRewardBaseAmount",
            "nameLocation": "552:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "537:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3131,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 3136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31",
                "id": 3132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "575:1:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 3135,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 3133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "579:2:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 3134,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "585:2:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "579:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "575:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3e2ceab",
            "id": 3142,
            "mutability": "mutable",
            "name": "signRecords",
            "nameLocation": "632:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "594:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
              "typeString": "mapping(address => struct SignReward.SignRecord)"
            },
            "typeName": {
              "id": 3141,
              "keyType": {
                "id": 3138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "602:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "594:30:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
                "typeString": "mapping(address => struct SignReward.SignRecord)"
              },
              "valueType": {
                "id": 3140,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3139,
                  "name": "SignRecord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3127,
                  "src": "613:10:6"
                },
                "referencedDeclaration": 3127,
                "src": "613:10:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                  "typeString": "struct SignReward.SignRecord"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f90f0828",
            "id": 3144,
            "mutability": "mutable",
            "name": "easydealAddress",
            "nameLocation": "664:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "649:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3143,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "722:49:6",
              "statements": [
                {
                  "expression": {
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3149,
                      "name": "ESDToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "732:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBEP20_$3413",
                        "typeString": "contract IBEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3151,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "750:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3150,
                        "name": "IBEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3413,
                        "src": "743:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBEP20_$3413_$",
                          "typeString": "type(contract IBEP20)"
                        }
                      },
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "743:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBEP20_$3413",
                        "typeString": "contract IBEP20"
                      }
                    },
                    "src": "732:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBEP20_$3413",
                      "typeString": "contract IBEP20"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "732:32:6"
                }
              ]
            },
            "id": 3156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "707:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3156,
                  "src": "699:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:23:6"
            },
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:6"
            },
            "scope": 3312,
            "src": "686:85:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3272,
              "nodeType": "Block",
              "src": "815:1002:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3164,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "856:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "856:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3162,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "833:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValidUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3422,
                          "src": "833:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "833:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "825:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "825:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3169,
                  "nodeType": "ExpressionStatement",
                  "src": "825:56:6"
                },
                {
                  "assignments": [
                    3171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3171,
                      "mutability": "mutable",
                      "name": "lockedWeight",
                      "nameLocation": "907:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "900:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3170,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "900:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3177,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "954:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "954:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3172,
                        "name": "ESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "922:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      },
                      "id": 3173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeLockedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3453,
                      "src": "922:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view external returns (uint32)"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "900:65:6"
                },
                {
                  "assignments": [
                    3180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3180,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "994:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "975:25:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                        "typeString": "struct SignReward.SignRecord"
                      },
                      "typeName": {
                        "id": 3179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3178,
                          "name": "SignRecord",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3127,
                          "src": "975:10:6"
                        },
                        "referencedDeclaration": 3127,
                        "src": "975:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3185,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3181,
                      "name": "signRecords",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3142,
                      "src": "1003:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
                        "typeString": "mapping(address => struct SignReward.SignRecord storage ref)"
                      }
                    },
                    "id": 3184,
                    "indexExpression": {
                      "expression": {
                        "id": 3182,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1015:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1015:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1003:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignRecord_$3127_storage",
                      "typeString": "struct SignReward.SignRecord storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "975:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3187,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1044:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1044:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3192,
                              "name": "signInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3130,
                              "src": "1093:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3189,
                                "name": "record",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3180,
                                "src": "1062:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                                  "typeString": "struct SignReward.SignRecord storage pointer"
                                }
                              },
                              "id": 3190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastSignedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3122,
                              "src": "1062:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5232,
                            "src": "1062:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1062:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1044:62:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c5245414459205349474e4544",
                        "id": 3195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6",
                          "typeString": "literal_string \"ALREADY SIGNED\""
                        },
                        "value": "ALREADY SIGNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6",
                          "typeString": "literal_string \"ALREADY SIGNED\""
                        }
                      ],
                      "id": 3186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1036:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3197,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:89:6"
                },
                {
                  "assignments": [
                    3199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3199,
                      "mutability": "mutable",
                      "name": "continuousNumber",
                      "nameLocation": "1143:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1136:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3198,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1136:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3202,
                  "initialValue": {
                    "expression": {
                      "id": 3200,
                      "name": "record",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3180,
                      "src": "1162:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                        "typeString": "struct SignReward.SignRecord storage pointer"
                      }
                    },
                    "id": 3201,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "continuousNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3124,
                    "src": "1162:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1136:49:6"
                },
                {
                  "assignments": [
                    3204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3204,
                      "mutability": "mutable",
                      "name": "additionalTimes",
                      "nameLocation": "1202:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1195:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3203,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1195:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3210,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 3209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 3207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3205,
                        "name": "continuousNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3199,
                        "src": "1220:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3330",
                        "id": 3206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      "src": "1220:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1244:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1220:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1195:50:6"
                },
                {
                  "assignments": [
                    3212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3212,
                      "mutability": "mutable",
                      "name": "rewardAmount",
                      "nameLocation": "1263:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1255:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1255:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3222,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3218,
                          "name": "lockedWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3171,
                          "src": "1324:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1337:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1324:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3215,
                            "name": "additionalTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "1303:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "expression": {
                            "id": 3213,
                            "name": "signRewardBaseAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3137,
                            "src": "1278:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5312,
                          "src": "1278:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1278:41:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5312,
                      "src": "1278:45:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1255:84:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1396:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1396:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3228,
                        "name": "rewardAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3212,
                        "src": "1408:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3223,
                        "name": "ESDToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "1374:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$3413",
                          "typeString": "contract IBEP20"
                        }
                      },
                      "id": 3225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "1374:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$3413_$",
                        "typeString": "function (contract IBEP20,address,uint256)"
                      }
                    },
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:47:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3231,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1470:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1470:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3233,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3180,
                          "src": "1488:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                            "typeString": "struct SignReward.SignRecord storage pointer"
                          }
                        },
                        "id": 3234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastSignedTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3122,
                        "src": "1488:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1517:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3236,
                          "name": "signInterval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3130,
                          "src": "1519:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1517:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1488:43:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1470:61:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3249,
                    "nodeType": "Block",
                    "src": "1584:46:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3245,
                            "name": "continuousNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3199,
                            "src": "1598:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1618:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1598:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 3248,
                        "nodeType": "ExpressionStatement",
                        "src": "1598:21:6"
                      }
                    ]
                  },
                  "id": 3250,
                  "nodeType": "IfStatement",
                  "src": "1466:164:6",
                  "trueBody": {
                    "id": 3244,
                    "nodeType": "Block",
                    "src": "1533:45:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3240,
                            "name": "continuousNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3199,
                            "src": "1547:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1566:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1547:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 3243,
                        "nodeType": "ExpressionStatement",
                        "src": "1547:20:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3251,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1640:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "continuousNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3124,
                      "src": "1640:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3254,
                      "name": "continuousNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3199,
                      "src": "1666:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1640:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 3256,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:42:6"
                },
                {
                  "expression": {
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3257,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1692:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastSignedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3122,
                      "src": "1692:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3260,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1721:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1721:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1692:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:44:6"
                },
                {
                  "expression": {
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3264,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1746:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3126,
                      "src": "1746:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3267,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3212,
                      "src": "1769:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1746:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3269,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:35:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1806:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3160,
                  "id": 3271,
                  "nodeType": "Return",
                  "src": "1799:11:6"
                }
              ]
            },
            "functionSelector": "2ca15122",
            "id": 3273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sign",
            "nameLocation": "786:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:2:6"
            },
            "returnParameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "809:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:6:6"
            },
            "scope": 3312,
            "src": "777:1040:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3291,
              "nodeType": "Block",
              "src": "1942:112:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3281,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1989:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1989:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3279,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "1960:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "1960:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:40:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2002:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1952:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3286,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:62:6"
                },
                {
                  "expression": {
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3287,
                      "name": "signInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "2024:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3288,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3275,
                      "src": "2039:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2024:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3290,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:23:6"
                }
              ]
            },
            "functionSelector": "7b63fef6",
            "id": 3292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSignInterval",
            "nameLocation": "1897:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3275,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "1923:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3292,
                  "src": "1916:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3274,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:17:6"
            },
            "returnParameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:0:6"
            },
            "scope": 3312,
            "src": "1888:166:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3310,
              "nodeType": "Block",
              "src": "2121:118:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3300,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2168:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2168:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3298,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "2139:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "2139:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2139:40:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2181:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2131:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:62:6"
                },
                {
                  "expression": {
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3306,
                      "name": "signRewardBaseAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "2203:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3307,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3294,
                      "src": "2226:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2203:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3309,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:29:6"
                }
              ]
            },
            "functionSelector": "a4d7e0ec",
            "id": 3311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSignRewardBaseAmount",
            "nameLocation": "2069:26:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3294,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2104:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3311,
                  "src": "2096:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:16:6"
            },
            "returnParameters": {
              "id": 3296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:0:6"
            },
            "scope": 3312,
            "src": "2060:179:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3313,
        "src": "236:2006:6",
        "usedErrors": []
      }
    ],
    "src": "33:2209:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/SignReward.sol",
    "exportedSymbols": {
      "Context": [
        3882
      ],
      "IBEP20": [
        3413
      ],
      "SafeBEP20": [
        5203
      ],
      "SafeMath": [
        5399
      ],
      "SignReward": [
        3312
      ]
    },
    "id": 3313,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3100,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:6"
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeBEP20.sol",
        "file": "./lib/SafeBEP20.sol",
        "id": 3102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 5204,
        "src": "59:46:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3101,
              "name": "SafeBEP20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "67:9:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/SafeMath.sol",
        "file": "./lib/SafeMath.sol",
        "id": 3104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 5400,
        "src": "106:44:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3103,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "114:8:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/lib/Context.sol",
        "file": "./lib/Context.sol",
        "id": 3106,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 3883,
        "src": "151:42:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3105,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "159:7:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chenzhanglong/Work/truffle/easydeal-core/contracts/itf/IBEP20.sol",
        "file": "./itf/IBEP20.sol",
        "id": 3108,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3313,
        "sourceUnit": 3414,
        "src": "194:40:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3107,
              "name": "IBEP20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:6:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3109,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3882,
              "src": "259:7:6"
            },
            "id": 3110,
            "nodeType": "InheritanceSpecifier",
            "src": "259:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3312,
        "linearizedBaseContracts": [
          3312,
          3882
        ],
        "name": "SignReward",
        "nameLocation": "245:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3114,
            "libraryName": {
              "id": 3111,
              "name": "SafeBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5203,
              "src": "279:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "273:27:6",
            "typeName": {
              "id": 3113,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3112,
                "name": "IBEP20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "293:6:6"
              },
              "referencedDeclaration": 3413,
              "src": "293:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$3413",
                "typeString": "contract IBEP20"
              }
            }
          },
          {
            "id": 3117,
            "libraryName": {
              "id": 3115,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5399,
              "src": "311:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "305:27:6",
            "typeName": {
              "id": 3116,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "324:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3120,
            "mutability": "mutable",
            "name": "ESDToken",
            "nameLocation": "345:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "338:15:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBEP20_$3413",
              "typeString": "contract IBEP20"
            },
            "typeName": {
              "id": 3119,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3118,
                "name": "IBEP20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "338:6:6"
              },
              "referencedDeclaration": 3413,
              "src": "338:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$3413",
                "typeString": "contract IBEP20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SignReward.SignRecord",
            "id": 3127,
            "members": [
              {
                "constant": false,
                "id": 3122,
                "mutability": "mutable",
                "name": "lastSignedTimestamp",
                "nameLocation": "396:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "388:27:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3121,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3124,
                "mutability": "mutable",
                "name": "continuousNumber",
                "nameLocation": "432:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "425:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 3123,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3126,
                "mutability": "mutable",
                "name": "totalRewards",
                "nameLocation": "466:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 3127,
                "src": "458:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SignRecord",
            "nameLocation": "367:10:6",
            "nodeType": "StructDefinition",
            "scope": 3312,
            "src": "360:125:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d57c6abb",
            "id": 3130,
            "mutability": "mutable",
            "name": "signInterval",
            "nameLocation": "506:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "491:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 3129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "521:10:6",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "773d29ae",
            "id": 3137,
            "mutability": "mutable",
            "name": "signRewardBaseAmount",
            "nameLocation": "552:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "537:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3131,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 3136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31",
                "id": 3132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "575:1:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 3135,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 3133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "579:2:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 3134,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "585:2:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "579:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "575:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3e2ceab",
            "id": 3142,
            "mutability": "mutable",
            "name": "signRecords",
            "nameLocation": "632:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "594:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
              "typeString": "mapping(address => struct SignReward.SignRecord)"
            },
            "typeName": {
              "id": 3141,
              "keyType": {
                "id": 3138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "602:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "594:30:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
                "typeString": "mapping(address => struct SignReward.SignRecord)"
              },
              "valueType": {
                "id": 3140,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3139,
                  "name": "SignRecord",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3127,
                  "src": "613:10:6"
                },
                "referencedDeclaration": 3127,
                "src": "613:10:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                  "typeString": "struct SignReward.SignRecord"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f90f0828",
            "id": 3144,
            "mutability": "mutable",
            "name": "easydealAddress",
            "nameLocation": "664:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 3312,
            "src": "649:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3143,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "722:49:6",
              "statements": [
                {
                  "expression": {
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3149,
                      "name": "ESDToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "732:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBEP20_$3413",
                        "typeString": "contract IBEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3151,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "750:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3150,
                        "name": "IBEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3413,
                        "src": "743:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBEP20_$3413_$",
                          "typeString": "type(contract IBEP20)"
                        }
                      },
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "743:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBEP20_$3413",
                        "typeString": "contract IBEP20"
                      }
                    },
                    "src": "732:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBEP20_$3413",
                      "typeString": "contract IBEP20"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "732:32:6"
                }
              ]
            },
            "id": 3156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "707:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3156,
                  "src": "699:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:23:6"
            },
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:6"
            },
            "scope": 3312,
            "src": "686:85:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3272,
              "nodeType": "Block",
              "src": "815:1002:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3164,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "856:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "856:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3162,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "833:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValidUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3422,
                          "src": "833:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "833:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "825:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "825:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3169,
                  "nodeType": "ExpressionStatement",
                  "src": "825:56:6"
                },
                {
                  "assignments": [
                    3171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3171,
                      "mutability": "mutable",
                      "name": "lockedWeight",
                      "nameLocation": "907:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "900:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3170,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "900:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3177,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "954:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "954:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3172,
                        "name": "ESDContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "922:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IESDContext_$3505",
                          "typeString": "contract IESDContext"
                        }
                      },
                      "id": 3173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeLockedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3453,
                      "src": "922:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view external returns (uint32)"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "900:65:6"
                },
                {
                  "assignments": [
                    3180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3180,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "994:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "975:25:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                        "typeString": "struct SignReward.SignRecord"
                      },
                      "typeName": {
                        "id": 3179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3178,
                          "name": "SignRecord",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3127,
                          "src": "975:10:6"
                        },
                        "referencedDeclaration": 3127,
                        "src": "975:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3185,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3181,
                      "name": "signRecords",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3142,
                      "src": "1003:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignRecord_$3127_storage_$",
                        "typeString": "mapping(address => struct SignReward.SignRecord storage ref)"
                      }
                    },
                    "id": 3184,
                    "indexExpression": {
                      "expression": {
                        "id": 3182,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1015:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1015:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1003:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignRecord_$3127_storage",
                      "typeString": "struct SignReward.SignRecord storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "975:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3187,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1044:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1044:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3192,
                              "name": "signInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3130,
                              "src": "1093:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3189,
                                "name": "record",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3180,
                                "src": "1062:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                                  "typeString": "struct SignReward.SignRecord storage pointer"
                                }
                              },
                              "id": 3190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastSignedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3122,
                              "src": "1062:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5232,
                            "src": "1062:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1062:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1044:62:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c5245414459205349474e4544",
                        "id": 3195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6",
                          "typeString": "literal_string \"ALREADY SIGNED\""
                        },
                        "value": "ALREADY SIGNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13ac4f3f6cceaa5e72a5dca3650c36dab28c157fef0f6e342495b25a43971fe6",
                          "typeString": "literal_string \"ALREADY SIGNED\""
                        }
                      ],
                      "id": 3186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1036:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3197,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:89:6"
                },
                {
                  "assignments": [
                    3199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3199,
                      "mutability": "mutable",
                      "name": "continuousNumber",
                      "nameLocation": "1143:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1136:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3198,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1136:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3202,
                  "initialValue": {
                    "expression": {
                      "id": 3200,
                      "name": "record",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3180,
                      "src": "1162:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                        "typeString": "struct SignReward.SignRecord storage pointer"
                      }
                    },
                    "id": 3201,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "continuousNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3124,
                    "src": "1162:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1136:49:6"
                },
                {
                  "assignments": [
                    3204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3204,
                      "mutability": "mutable",
                      "name": "additionalTimes",
                      "nameLocation": "1202:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1195:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 3203,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1195:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3210,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 3209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 3207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3205,
                        "name": "continuousNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3199,
                        "src": "1220:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3330",
                        "id": 3206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      "src": "1220:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1244:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1220:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1195:50:6"
                },
                {
                  "assignments": [
                    3212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3212,
                      "mutability": "mutable",
                      "name": "rewardAmount",
                      "nameLocation": "1263:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "1255:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1255:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3222,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3218,
                          "name": "lockedWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3171,
                          "src": "1324:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1337:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1324:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3215,
                            "name": "additionalTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "1303:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "expression": {
                            "id": 3213,
                            "name": "signRewardBaseAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3137,
                            "src": "1278:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5312,
                          "src": "1278:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1278:41:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5312,
                      "src": "1278:45:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1255:84:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1396:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1396:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3228,
                        "name": "rewardAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3212,
                        "src": "1408:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3223,
                        "name": "ESDToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "1374:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$3413",
                          "typeString": "contract IBEP20"
                        }
                      },
                      "id": 3225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "1374:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$3413_$",
                        "typeString": "function (contract IBEP20,address,uint256)"
                      }
                    },
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:47:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3231,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1470:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1470:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3233,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3180,
                          "src": "1488:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                            "typeString": "struct SignReward.SignRecord storage pointer"
                          }
                        },
                        "id": 3234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastSignedTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3122,
                        "src": "1488:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1517:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3236,
                          "name": "signInterval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3130,
                          "src": "1519:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1517:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1488:43:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1470:61:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3249,
                    "nodeType": "Block",
                    "src": "1584:46:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3245,
                            "name": "continuousNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3199,
                            "src": "1598:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1618:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1598:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 3248,
                        "nodeType": "ExpressionStatement",
                        "src": "1598:21:6"
                      }
                    ]
                  },
                  "id": 3250,
                  "nodeType": "IfStatement",
                  "src": "1466:164:6",
                  "trueBody": {
                    "id": 3244,
                    "nodeType": "Block",
                    "src": "1533:45:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3240,
                            "name": "continuousNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3199,
                            "src": "1547:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1566:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1547:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 3243,
                        "nodeType": "ExpressionStatement",
                        "src": "1547:20:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3251,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1640:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "continuousNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3124,
                      "src": "1640:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3254,
                      "name": "continuousNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3199,
                      "src": "1666:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1640:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 3256,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:42:6"
                },
                {
                  "expression": {
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3257,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1692:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastSignedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3122,
                      "src": "1692:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3260,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1721:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1721:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1692:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:44:6"
                },
                {
                  "expression": {
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3264,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "1746:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignRecord_$3127_storage_ptr",
                          "typeString": "struct SignReward.SignRecord storage pointer"
                        }
                      },
                      "id": 3266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3126,
                      "src": "1746:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3267,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3212,
                      "src": "1769:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1746:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3269,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:35:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1806:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3160,
                  "id": 3271,
                  "nodeType": "Return",
                  "src": "1799:11:6"
                }
              ]
            },
            "functionSelector": "2ca15122",
            "id": 3273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sign",
            "nameLocation": "786:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:2:6"
            },
            "returnParameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "809:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:6:6"
            },
            "scope": 3312,
            "src": "777:1040:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3291,
              "nodeType": "Block",
              "src": "1942:112:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3281,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1989:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1989:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3279,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "1960:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "1960:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:40:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2002:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1952:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3286,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:62:6"
                },
                {
                  "expression": {
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3287,
                      "name": "signInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "2024:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3288,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3275,
                      "src": "2039:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2024:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3290,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:23:6"
                }
              ]
            },
            "functionSelector": "7b63fef6",
            "id": 3292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSignInterval",
            "nameLocation": "1897:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3275,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "1923:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3292,
                  "src": "1916:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3274,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:17:6"
            },
            "returnParameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:0:6"
            },
            "scope": 3312,
            "src": "1888:166:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3310,
              "nodeType": "Block",
              "src": "2121:118:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3300,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2168:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2168:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3298,
                            "name": "ESDContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3849,
                            "src": "2139:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IESDContext_$3505",
                              "typeString": "contract IESDContext"
                            }
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isViaUserContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3460,
                          "src": "2139:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2139:40:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "464f5242494444454e",
                        "id": 3303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2181:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        },
                        "value": "FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73572d81fbc15b4b4db2883eb68bbf9d58d82f493f8d7f7e93f9af3fce4add77",
                          "typeString": "literal_string \"FORBIDDEN\""
                        }
                      ],
                      "id": 3297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2131:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:62:6"
                },
                {
                  "expression": {
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3306,
                      "name": "signRewardBaseAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "2203:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3307,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3294,
                      "src": "2226:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2203:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3309,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:29:6"
                }
              ]
            },
            "functionSelector": "a4d7e0ec",
            "id": 3311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSignRewardBaseAmount",
            "nameLocation": "2069:26:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3294,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2104:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3311,
                  "src": "2096:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:16:6"
            },
            "returnParameters": {
              "id": 3296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:0:6"
            },
            "scope": 3312,
            "src": "2060:179:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3313,
        "src": "236:2006:6",
        "usedErrors": []
      }
    ],
    "src": "33:2209:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-11T07:49:57.520Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}